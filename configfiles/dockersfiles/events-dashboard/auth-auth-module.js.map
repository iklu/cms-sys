{"version":3,"sources":["webpack:///./src/app/auth/auth.module.ts","webpack:///./src/app/auth/login/login.component.html","webpack:///./src/app/auth/login/login.component.scss","webpack:///./src/app/auth/login/login.component.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAyC;AACM;AACU;AACF;AACI;AACH;AACX;AAE7C,IAAM,MAAM,GAAW;IACrB,EAAE,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,qEAAc,EAAE;IACvC,EAAE,IAAI,EAAE,IAAI,EAAE,UAAU,EAAE,EAAE,EAAC;CAC9B,CAAC;AAeF;IAAA;IAA0B,CAAC;IAAd,UAAU;QAbtB,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,4DAAY;gBACZ,sEAAc;gBACd,qEAAgB;gBAChB,0DAAW;gBACX,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC;aAE9B;YACD,YAAY,EAAE;gBACZ,qEAAc;aACf;SACF,CAAC;OACW,UAAU,CAAI;IAAD,iBAAC;CAAA;AAAJ;;;;;;;;;;;;AC1BvB,ywC;;;;;;;;;;;ACAA,2BAA2B,mBAAmB,EAAE,cAAc,qBAAqB,qBAAqB,gBAAgB,EAAE,iBAAiB,gBAAgB,EAAE,G;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA9E;AACtC;AAEc;AACb;AACX;AAO/B;IAuBE,wBAAoB,MAAc,EAAU,WAAwB;QAAhD,WAAM,GAAN,MAAM,CAAQ;QAAU,gBAAW,GAAX,WAAW,CAAa;QAjB1D,oBAAe,GAAsB,IAAI,0DAAY,EAAO,CAAC;QAEvE,UAAK,GAAgC;YACnC,OAAO,EAAE,IAAI,CAAC,YAAY,IAAI,qBAAqB;YACnD,IAAI,EAAE,KAAK;SACZ,CAAC;QAEF,YAAO,GAAgC;YACrC,IAAI,EAAE,KAAK;SACZ,CAAC;QAGM,kBAAa,GAAiB,IAAI,4CAAO,EAAE,CAAC;IAKoB,CAAC;IAEzE,iCAAQ,GAAR;IACA,CAAC;IAED,8BAAK,GAAL;QAAA,iBAmBC;QAjBC,IAAM,WAAW,GAAuB;YACtC,QAAQ,EAAE,IAAI,CAAC,QAAQ;YACvB,QAAQ,EAAE,IAAI,CAAC,QAAQ;SACxB,CAAC;QAEF,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,WAAW,CAAC;aAClC,IAAI,CAAC,gEAAS,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;aACnC,SAAS,CAAC,UAAC,GAAmC;YAC7C,+DAA+D;YAC/D,gCAAgC;YAEhC,sBAAsB;YACtB,KAAI,CAAC,OAAO,CAAC,IAAI,GAAG,KAAK,CAAC;QAC5B,CAAC,EAAE,UAAC,KAAK;YACP,KAAI,CAAC,KAAK,CAAC,IAAI,GAAG,IAAI,CAAC;YACvB,KAAI,CAAC,YAAY,GAAG,KAAK,CAAC;QAC5B,CAAC,CAAC,CAAC;IACL,CAAC;IA7CQ;QAAR,2DAAK,EAAE;;wDAAsB;IACrB;QAAR,2DAAK,EAAE;;wDAAsB;IACrB;QAAR,2DAAK,EAAE;;wDAAuB;IAErB;QAAT,4DAAM,EAAE;kCAAkB,0DAAY;2DAAgC;IAN5D,cAAc;QAL1B,+DAAS,CAAC;YACT,QAAQ,EAAE,WAAW;;;SAGtB,CAAC;yCAwB4B,sDAAM,EAAuB,iEAAW;OAvBzD,cAAc,CAgD1B;IAAD,qBAAC;CAAA;AAhD0B","file":"auth-auth-module.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { MaterialModule } from '../shared/material.module';\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: LoginComponent },\r\n  { path: '**', redirectTo: ''}\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    MaterialModule,\r\n    FlexLayoutModule,\r\n    FormsModule,\r\n    RouterModule.forChild(routes),\r\n\r\n  ],\r\n  declarations: [\r\n    LoginComponent\r\n  ]\r\n})\r\nexport class AuthModule { }\r\n","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\r\\n<mat-toolbar color=\\\"primary\\\">\\r\\n  <mat-toolbar-row>\\r\\n    <!--  <span>HOME</span> -->\\r\\n     <span><a href=\\\"/\\\">HOME</a></span>\\r\\n     <span class=\\\"spacer\\\"></span>\\r\\n     <a mat-button routerLink=\\\"/secured\\\">Dashboard</a>\\r\\n     <a mat-button routerLink=\\\"/login\\\"><mat-icon class=\\\"icon\\\">input</mat-icon>Login</a>\\r\\n  </mat-toolbar-row>\\r\\n</mat-toolbar>\\r\\n\\r\\n<mat-toolbar>\\r\\n  <span>LOGIN</span>\\r\\n</mat-toolbar>\\r\\n<mat-card class=\\\"my-card\\\">\\r\\n   <mat-card-content>\\r\\n      <form class=\\\"my-form\\\">\\r\\n         <mat-form-field class=\\\"full-width\\\">\\r\\n            <mat-label>Username</mat-label>\\r\\n            <input  matInput [(ngModel)]=\\\"username\\\"  placeholder=\\\"Username\\\" name=\\\"username\\\">\\r\\n         </mat-form-field>\\r\\n         <mat-form-field class=\\\"full-width\\\">\\r\\n            <mat-label>Password</mat-label>\\r\\n            <input  matInput [(ngModel)]=\\\"password\\\" type=\\\"password\\\" placeholder=\\\"Password\\\" name=\\\"password\\\">\\r\\n         </mat-form-field>\\r\\n      </form>\\r\\n   </mat-card-content>\\r\\n   <mat-card-actions>\\r\\n      <button mat-raised-button (click)=\\\"login()\\\" color=\\\"primary\\\">LOGIN</button>\\r\\n   </mat-card-actions>\\r\\n</mat-card>\\r\\n\"","module.exports = \".spacer {\\n  flex: 1 1 auto; }\\n\\n.my-form {\\n  min-width: 150px;\\n  max-width: 500px;\\n  width: 100%; }\\n\\n.full-width {\\n  width: 100%; }\\n\"","import { Component, OnInit, Output, Input, EventEmitter } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { AuthLoginBehaviourInterface, AuthLoginInterface, AuthInterfaceLoginSuccessEvent } from '../_service/auth.interface';\r\nimport { AuthService } from '../_service/auth.service';\r\nimport { takeUntil} from 'rxjs/operators';\r\nimport { Subject } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.scss']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\r\n  @Input() errorMessage: string;\r\n  @Input() instanceName: string;\r\n  @Input() showPassword: boolean;\r\n\r\n  @Output() authLoginStatus: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n  error: AuthLoginBehaviourInterface = {\r\n    message: this.errorMessage || 'Invalid credentials',\r\n    show: false\r\n  };\r\n\r\n  loading: AuthLoginBehaviourInterface = {\r\n    show: false\r\n  };\r\n\r\n\r\n  private ngUnsubscribe: Subject<any> = new Subject();\r\n\r\n  username: string;\r\n  password: string;\r\n\r\n  constructor(private router: Router, private authService: AuthService) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  login(): void {\r\n\r\n    const credentials: AuthLoginInterface = {\r\n      username: this.username,\r\n      password: this.password\r\n    };\r\n\r\n    this.authService.login(credentials)\r\n    .pipe(takeUntil(this.ngUnsubscribe))\r\n    .subscribe((res: AuthInterfaceLoginSuccessEvent) => {\r\n      // send over to parent component auth status whatever it may be\r\n      // res.userName = this.username;\r\n\r\n      // hide loading status\r\n      this.loading.show = false;\r\n    }, (error) => {\r\n      this.error.show = true;\r\n      this.errorMessage = error;\r\n    });\r\n  }\r\n}\r\n"],"sourceRoot":""}